@page "/admin/editar-estoques/{Id}"

@using BlazorApp.Web.Services
@using System.Net.Http.Headers
@using System.Globalization;

@inject HttpClient Http
@inject IConfiguration Configuration
@inject AuthService Auth

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h2>Edição de Estoques</h2>
                <p>Utilize o formulário para alterar um estoque.</p>
                <hr />

                <Loading IsLoading="@isLoading">
                    <div class="mb-3">
                        <strong class="text-success">@mensagemSucesso</strong>
                        <strong class="text-danger">@mensagemErro</strong>
                    </div>
                </Loading>

                <EditForm Model="@request" OnValidSubmit="@OnSubmit">

                    <DataAnnotationsValidator />

                    <div>
                        <input type="hidden" @bind="request.Id" />
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label>Nome do Estoque:</label>
                            <InputText class="form-control" @bind-Value="request.Nome" />
                            <span class="text-danger">
                                <ValidationMessage For="@(() => request.Nome)" />
                            </span>
                        </div>
                        <div class="col-md-6">
                            <label>Descrição do estoque:</label>
                            <InputTextArea class="form-control" @bind-Value="request.Descricao" />
                            <span class="text-danger">
                                <ValidationMessage For="@(() => request.Descricao)" />
                            </span>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-12">
                            <input type="submit" class="btn btn-primary" value="Salvar Alterações" />
                        </div>
                    </div>

                </EditForm>

            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public string? Id { get; set; }

    private EditarEstoquesRequest request = new EditarEstoquesRequest();

    private string? mensagemSucesso;
    private string? mensagemErro;

    private bool isLoading;

    protected override async Task OnInitializedAsync()
    {
        await Auth.Authorize(true);

        var data = await Auth.GetData();
        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", data.AccessToken);

        var requestUri = Configuration["EstoqueApp"] + "/estoques";

        var respConta = await Http.GetAsync($"{requestUri}/{Id}");
        if(respConta.IsSuccessStatusCode)
        {
            var estoque = await respConta.Content.ReadFromJsonAsync<EstoquesResponse>();

            request.Id = estoque.Id.ToString();
            request.Nome = estoque.Nome;
            request.Descricao = estoque.Descricao;
        }
    }

    protected async Task OnSubmit()
    {
        isLoading = true;

        mensagemSucesso = string.Empty;
        mensagemErro = string.Empty;

        var requestUri = Configuration["EstoqueApp"] + "/estoques";

        var response = await Http.PutAsJsonAsync(requestUri, request);
        if(response.IsSuccessStatusCode)
        {
            mensagemSucesso = "Estoque atualizado com sucesso.";
        }
        else
        {
            mensagemErro = "Falha ao atualizar estoque.";
        }

        isLoading = false;
    }
}
